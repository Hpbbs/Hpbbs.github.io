---
layout: post
title:  "智能手表等小屏幕UI设计规范"
date:   2020-04-18 21:13 +0800
categories: 设计思考
published: true
mermaid: true
---

---

Author：Hpbbs

Date：2020/10/10/Saturday

Mail：toweros@sina.com

---

* toc
{:toc}

### 好的接口设计的标准？（Unix模块接口规范）

1. 可显的
2. 用法是透明的
3. 遵循最小异原则

接口不能有相当规模的记忆负担

模块接口面相的是调用者，是开发人人员，本质是为了拥有优良的api职责功能信息传达，良好的操作性，去达到好的控制交互以及数据交流等，去对模块负责的问题领域的各种问题建立良好的解决模型

同样：用户接口，是开发者或设计人员为普通用户（大众软件）或某些领域的特定人群（解决特定问题的IDE，如Maya，PS，WPS）而设计的信息可视化的接口，让服务的人群快速，无痛感的上手使用这个软件产品并达到他的工作需求，最主要的因素是信息传达的准确性屏幕大小的决定因素（为何手机屏幕越来越大？）

手机屏幕的 大或者小，从来不是取决于本身的尺寸的，而是取决于这块屏幕所传达的信息的特点和交互，举个例子：

办公软件，手机当然不适合，一个屏幕无法传达那么的有效工作信息 

群控系统，系统控制界面，也不适合，手机，要点击多少次才能获得到达你所在信息的页面啊？ 

从以前的手表那么大的屏幕的手机，到3.5inch iPhone 到现在的标配5.0inch 以上的屏幕，其实是开发人员，在尝试将大量的信息在手机那么大的屏幕上表达的； 如果一旦手机屏幕大小突破了一个线，我们定义他为平板，我们一半用平板 画图 看书 追剧 再大一点，我们定义为pc，我们用pc来写文档，做报表，写工程软件，eda等等 

综上：手机屏幕大小从来不是 尺寸决定的，而是手机里承载的软件所要表达的信息决定的；同时，想要表达的信息的特点也决定了这个产品的定位

### 好的用户接口设计的标准？

**现况**

很多公司将用户界面的设计直接交给设计师，这是不合理的，用户界面设计，首先要是一个好的用户接口，是一个好的用户接口，然后再去追求是一个好的观感设计，才是合理的；举例子：看以看到很多的购物软件以及很多的开屏广告，似乎他们的目的就是让用户在铺天盖地的“好的设计的广告图片”里懵逼，然后就会降低下单的阈值似的，其所做的唯一的就是降低客户获得有效商品的可能，所以我用购物软件时候，总是很烦躁；再说很多直播软件，界面安排，让任何一个对美感有点追求的人都会反感

有些公司将似乎将用户接口设计的工作交给产品经理，但是很多产品的在公司内的职责划分都是按照业务模块划分甚至是按照小的功能划分，暴露出来的问题就是，有些页面（用户接口的一个小单元）是多个产品经理杂糅出来的，体验没有一体性，分裂，甚至自相矛盾，没有一个产品经理以用户接口的标准或意识去整体思考产品，容易纠结于细小的问题

有些公司就直接将接口设计工作交给软件工程师，而大多数软件工程师，都更加关注软件内部的工程，他们似乎不认为用户接口，用户是软件工程中非常重要的参与者

**好的用户界面/用户接口 设计标准**

好的接口 + 随便的设计 = 好的用户体验

但 差的接口 + 好的设计 = 垃圾产品

无障碍浏览，文化本土化都应该属于接口设计范畴



### 什么样的UI设计才算得上是好的UI设计？

### 特点分析

1. 显示的信息有限，操作范围有限
2. 多数数据展示
3. 少数决策性操作
4. 尽量没有编辑性操作



无论是GUI 还是小爱同学的VUI，如何更加得体，准确，有效的传达给屏幕对面的用户信息，更加有效的通过User Interface与用户交流，是开发者需要具备的技能

### 信息表达风格（新闻的表达风格）



新闻的五大要素：5W（When，Where，What，Why，Who）

新闻的结构：标题、导语、主体、背景、结尾



```mermaid
graph LR

导语/标题 --> 标题栏/Header --> HTML/Header --> Header
主体 --> 数据信息展示/Body --> HTML/Body --> Body/Content/Chart&List
结尾 --> 总结 --> HTML/NULL --> Operation/决策性操作
背景 --> 信息不同角度传达/全局色彩/Style --> HTML/Style/CSS --> Style
```

### 设计风格

1. 扁平化
2. 结构简洁
3. 操作统一

数据展示页面规范：

- 色彩明亮
- 尽量图表化/形象表达

### 产品实现

***思想***：将可见的屏幕区域划分（Header/Body/Footer），并且对屏幕划分组件化：设计为一个完整的组合组件widget（难怪名字叫做组件），是 widgets 的集合联合合作，很像LVGL的组件，但是组合的层次更高：LVGL在与显示和控制的完整性，本思想在于信息表达的要素性----》 1⃣️**以信息表达要素 为标准 组合**；同时，对于通用的组件，其显示风格也是固定的，就像表格，只用制定特定的信息就好，而无需关注他的绘制，类比 android的alertdialog，类似echart和matplotlib的图表显示----》2⃣️ **用户关注数据和行为而UI通用**



### 页面编写

1. 使用比例数据而非死的数据
2. 尺寸数据统一到 一个单独的宏文件里



### Unix用户接口直观

1. 可显的
2. 用法是透明的
3. 遵循最小异原则

接口不能有相当规模的记忆负担




